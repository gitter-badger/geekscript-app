<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
   <modelVersion>4.0.0</modelVersion>
   <groupId>com.geekscript</groupId>
   <artifactId>geekscript-app</artifactId>
   <version>1.0-SNAPSHOT</version>
   <packaging>pom</packaging>
   <name>geekscript-app application</name>

   <modules>
      <module>geekscript-app-ejb</module>
      <module>geekscript-app-web</module>
      <module>geekscript-app-ear</module>
   </modules>

   <properties>
      <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
      <!-- Define the version of JBoss' Java EE 6 APIs we want to import. 
        Any dependencies from org.jboss.spec will have their version defined by this 
        BOM -->
      <javaee6.web.spec.version>2.0.0.Final</javaee6.web.spec.version>
      <!-- Alternatively, comment out the above line, and un-comment the line below to 
        use version 3.0.0.Beta1-redhat-1 which is a release certified 
      to work with JBoss EAP 6. It requires you have access to the JBoss EAP 6 maven repository. -->
      <!-- 
      <javaee6.web.spec.version>3.0.0.Beta1-redhat-1</javaee6.web.spec.version> 
      -->
   </properties>

   <dependencyManagement>
      <dependencies>

         <!-- Define the version of the EJB jar so that we don't need to 
            repeat ourselves in every module -->
         <dependency>
            <groupId>com.geekscript</groupId>
            <artifactId>geekscript-app-ejb</artifactId>
            <version>1.0-SNAPSHOT</version>
            <type>ejb</type>
         </dependency>

         <!-- Define the version of the WAR so that we don't need to repeat 
            ourselves in every module -->
         <dependency>
            <groupId>com.geekscript</groupId>
            <artifactId>geekscript-app-web</artifactId>
            <version>1.0-SNAPSHOT</version>
            <type>war</type>
            <scope>compile</scope>
         </dependency>

         <!-- JBoss distributes a complete set of Java EE 6 APIs including 
            a Bill of Materials (BOM). A BOM specifies the versions of a "stack" (or 
            a collection) of artifacts. We use this here so that we always get the correct 
            versions of artifacts. Here we use the jboss-javaee-web-6.0 stack (you can 
            read this as the JBoss stack of the Java EE Web Profile 6 APIs) -->
        <dependency>
            <groupId>org.jboss.spec</groupId>
            <artifactId>jboss-javaee-web-6.0</artifactId>
            <version>${javaee6.web.spec.version}</version>
            <type>pom</type>
            <scope>import</scope>
        </dependency>
         <!-- JSR-303 (Bean Validation) Implementation -->
         <!-- Provides portable constraints such as @Email -->
         <!-- Hibernate Validator is shipped in JBoss AS 7 -->
         <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-validator</artifactId>
            <version>4.1.0.Final</version>
            <scope>provided</scope>
            <exclusions>
               <exclusion>
                  <groupId>org.slf4j</groupId>
                  <artifactId>slf4j-api</artifactId>
               </exclusion>
            </exclusions>
         </dependency>

         <!-- Test dependencies -->
         <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.10</version>
            <type>jar</type>
            <scope>test</scope>
         </dependency>

          <!-- Optional, but highly recommended -->
          <!-- Arquillian allows you to test enterprise code such as EJBs and
             Transactional(JTA) JPA from JUnit/TestNG -->
          <dependency>
              <groupId>org.jboss.arquillian.junit</groupId>
              <artifactId>arquillian-junit-container</artifactId>
              <version>1.0.0.Final</version>
              <scope>test</scope>
          </dependency>

          <dependency>
              <groupId>org.jboss.arquillian.protocol</groupId>
              <artifactId>arquillian-protocol-servlet</artifactId>
              <version>1.0.3.Final</version>
              <scope>test</scope>
          </dependency>

          <dependency>
              <groupId>org.jboss.arquillian.container</groupId>
              <artifactId>arquillian-container-test-impl-base</artifactId>
              <version>1.0.0.Final</version>
              <scope>test</scope>
          </dependency>

              <!-- Aquillian BOM - Bill Of Materials - -->
              <dependency>
                  <groupId>org.jboss.arquillian</groupId>
                  <artifactId>arquillian-bom</artifactId>
                  <version>1.0.0.Final</version>
                  <scope>import</scope>
                  <type>pom</type>
              </dependency>

          <!-- JBoss distributes a complete set of Java EE 6 APIs including
    a Bill of Materials (BOM). A BOM specifies the versions of a "stack" (or
    a collection) of artifacts. We use this here so that we always get the correct
    versions of artifacts. Here we use the jboss-javaee-6.0-with-tools stack
    (you can read this as the JBoss stack of the Java EE 6 APIs, with some extras
    tools for your project, such as Arquillian for testing) and the jboss-javaee-6.0-with-hibernate
    stack you can read this as the JBoss stack of the Java EE 6 APIs, with extras
    from the Hibernate family of projects) -->
<!--
          <dependency>
              <groupId>org.jboss.bom</groupId>
              <artifactId>jboss-javaee-6.0-with-tools</artifactId>
              <version>${version.jboss.bom}</version>
              <type>pom</type>
              <scope>import</scope>
          </dependency>
          <dependency>
              <groupId>org.jboss.bom</groupId>
              <artifactId>jboss-javaee-6.0-with-hibernate</artifactId>
              <version>${version.jboss.bom}</version>
              <type>pom</type>
              <scope>import</scope>
          </dependency>-->

      </dependencies>

   </dependencyManagement>

   <build>
      <pluginManagement>
         <plugins>
            <!-- Compiler plugin enforces Java 1.6 compatibility and activates 
               annotation processors -->
            <plugin>
               <artifactId>maven-compiler-plugin</artifactId>
               <version>2.3.2</version>
               <configuration>
                  <source>1.6</source>
                  <target>1.6</target>
               </configuration>
            </plugin>
            <!-- The JBoss AS plugin deploys your ear to a local JBoss AS 
               container -->
            <!-- Due to Maven's lack of intelligence with EARs we need to 
               configure the jboss-as maven plugin to skip deployment for all modules. We 
               then enable it specifically in the ear module. -->
<!--            <plugin>
               <groupId>org.jboss.as.plugins</groupId>
               <artifactId>jboss-as-maven-plugin</artifactId>
               <version>7.1.1.Final</version>
               <inherited>true</inherited>
               <configuration>
                  <skip>true</skip>
               </configuration>
            </plugin>-->

             <!-- Deploy when mvn install -->
             <plugin>
                 <groupId>org.jboss.as.plugins</groupId>
                 <artifactId>jboss-as-maven-plugin</artifactId>
                 <version>7.1.1.Final</version>
                     <inherited>true</inherited>
                     <configuration>
                         <skip>true</skip>
                     </configuration>
                 <executions>
                     <execution>
                         <phase>install</phase>
                         <goals>
                             <goal>deploy</goal>
                         </goals>
                     </execution>
                 </executions>
             </plugin>

         </plugins>
      </pluginManagement>
   </build>

    <profiles>
    <profile>
        <!-- The default profile skips all tests, though you can tune it
           to run just unit tests based on a custom pattern -->
        <!-- Seperate profiles are provided for running all tests, including
           Arquillian tests that execute in the specified container -->
        <id>default</id>
        <activation>
            <activeByDefault>true</activeByDefault>
        </activation>
        <build>
            <plugins>
                <plugin>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>2.4.3</version>
                    <configuration>
                        <skip>true</skip>
                    </configuration>
                </plugin>
            </plugins>
        </build>
    </profile>

    <profile>
        <!-- An optional Arquillian testing profile that executes tests
           in your JBoss AS instance -->
        <!-- This profile will start a new JBoss AS instance, and execute
           the test, shutting it down when done -->
        <!-- Run with: mvn clean test -Parq-jbossas-managed -->
        <id>arq-jbossas-managed</id>
        <dependencies>
            <dependency>
                <groupId>org.jboss.as</groupId>
                <artifactId>jboss-as-arquillian-container-managed</artifactId>
                <version>7.1.1.Final</version>
                <scope>test</scope>
            </dependency>
        </dependencies>
    </profile>

    <profile>
        <!-- An optional Arquillian testing profile that executes tests
           in a remote JBoss AS instance -->
        <!-- Run with: mvn clean test -Parq-jbossas-remote -->
        <id>arq-jbossas-remote</id>
        <dependencies>
            <dependency>
                <groupId>org.jboss.as</groupId>
                <artifactId>jboss-as-arquillian-container-remote</artifactId>
                <version>7.1.1.Final</version>
                <scope>test</scope>
            </dependency>
        </dependencies>
    </profile>
<!--
    <profile>
        &lt;!&ndash; When built in OpenShift the 'openshift' profile will be used when invoking mvn. &ndash;&gt;
        &lt;!&ndash; Use this profile for any OpenShift specific customization your app will need. &ndash;&gt;
        &lt;!&ndash; By default that is to put the resulting archive into the 'deployments' folder. &ndash;&gt;
        &lt;!&ndash; http://maven.apache.org/guides/mini/guide-building-for-different-environments.html &ndash;&gt;
        <id>openshift</id>
        <build>
            <finalName>geekscript</finalName>
            <plugins>
                <plugin>
                    <artifactId>maven-ear-plugin</artifactId>
                    <version>2.8</version>
                    <configuration>
                        <outputDirectory>deployments</outputDirectory>
                        <earName>ROOT</earName>
                    </configuration>
                </plugin>
            </plugins>
        </build>
    </profile>
-->

    </profiles>
</project>
